from time import sleep
from TerminalTools import *

def testMatrix():
    count = 0
    count2 = 0
    matrix = ""

    # creates a test matrix
    while count < 7:
        if count != 0:
            matrix = matrix + "\n"
        count2 = 0
        while count2 < 5:
            matrix = matrix + "0"
            count2 += 1
        count += 1

    # print(matrix) # prints test matrix

A = [
    [0,0,0,0,0,0],
    [0,0,1,0,0,0],
    [0,1,0,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,1,1,1,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0]
]
B = [
    [0,0,0,0,0,0],
    [1,1,1,1,0,0],
    [0,1,0,0,1,0],
    [0,1,0,0,1,0],
    [0,1,1,1,0,0],
    [0,1,0,0,1,0],
    [0,1,0,0,1,0],
    [1,1,1,1,0,0],
    [0,0,0,0,0,0]
]
C = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
D = [
    [0,0,0,0,0,0],
    [1,1,1,1,0,0],
    [0,1,0,0,1,0],
    [0,1,0,0,1,0],
    [0,1,0,0,1,0],
    [0,1,0,0,1,0],
    [0,1,0,0,1,0],
    [1,1,1,1,0,0],
    [0,0,0,0,0,0]
]
E = [
    [0,0,0,0,0,0],
    [1,1,1,1,1,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,1,1,1,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,1,1,1,1,0],
    [0,0,0,0,0,0],
]
F = [
    [0,0,0,0,0,0],
    [1,1,1,1,1,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,1,1,1,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [0,0,0,0,0,0],
]

G = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,0,0],
    [1,0,1,1,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,1,0],
    [0,0,0,0,0,0]
]
H = [
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,1,1,1,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0],
]
I = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
J = [
    [0,0,0,0,0,0],
    [0,0,1,1,1,0],
    [0,0,0,1,0,0],
    [0,0,0,1,0,0],
    [0,0,0,1,0,0],
    [0,0,0,1,0,0],
    [1,0,0,1,0,0],
    [0,1,1,0,0,0],
    [0,0,0,0,0,0]
]
K = [
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,1,0,0],
    [1,0,1,0,0,0],
    [1,1,0,0,0,0],
    [1,0,1,0,0,0],
    [1,0,0,1,0,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0]
]
L = [
    [0,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,1,1,1,1,0],
    [0,0,0,0,0,0]
]
M = [
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,1,0,1,1,0],
    [1,0,1,0,1,0],
    [1,0,1,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0]
]
N = [
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,1,0,0,1,0],
    [1,0,1,0,1,0],
    [1,0,0,1,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0]
]
O = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
P = [
    [0,0,0,0,0,0],
    [1,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,1,1,1,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [0,0,0,0,0,0]
]
Q = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,1,0,1,0],
    [1,0,0,1,0,0],
    [0,1,1,0,1,0],
    [0,0,0,0,0,0]
]
R = [
    [0,0,0,0,0,0],
    [1,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,1,1,1,0,0],
    [1,0,1,0,0,0],
    [1,0,0,1,0,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0]
]
S = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,0,0],
    [0,1,1,1,0,0],
    [0,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
T = [
    [0,0,0,0,0,0],
    [1,1,1,1,1,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,0,0,0,0]
]
U = [
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
V = [
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,0,1,0,0],
    [0,0,1,0,0,0],
    [0,0,0,0,0,0]
]
W = [
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,1,0,1,0],
    [1,0,1,0,1,0],
    [1,0,1,0,1,0],
    [0,1,0,1,0,0],
    [0,0,0,0,0,0]
]
X = [
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,0,1,0,0],
    [0,0,1,0,0,0],
    [0,1,0,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0]
]
Y = [
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,0,1,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,0,0,0,0]
]
Z = [
    [0,0,0,0,0,0],
    [1,1,1,1,1,0],
    [0,0,0,0,1,0],
    [0,0,0,1,0,0],
    [0,0,1,0,0,0],
    [0,1,0,0,0,0],
    [1,0,0,0,0,0],
    [1,1,1,1,1,0],
    [0,0,0,0,0,0]
]
a = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [0,0,0,0,1,0],
    [0,1,1,1,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,1,0],
    [0,0,0,0,0,0]
]
b = [
    [0,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,1,1,0,0],
    [1,1,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,1,1,1,0,0],
    [0,0,0,0,0,0]
]
c = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
d = [
    [0,0,0,0,0,0],
    [0,0,0,0,1,0],
    [0,0,0,0,1,0],
    [0,1,1,0,1,0],
    [1,0,0,1,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,1,0],
    [0,0,0,0,0,0]
]
e = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,1,1,1,1,0],
    [1,0,0,0,0,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
f = [
    [0,0,0,0,0,0],
    [0,0,1,1,0,0],
    [0,1,0,0,1,0],
    [0,1,0,0,0,0],
    [1,1,1,0,0,0],
    [0,1,0,0,0,0],
    [0,1,0,0,0,0],
    [0,1,0,0,0,0],
    [0,0,0,0,0,0]
]
g = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,1,1,1,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,1,0],
    [0,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
h = [
    [0,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,1,1,0,0],
    [1,1,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0]
]
i = [
    [0,0,0,0,0,0],
    [0,0,1,0,0,0],
    [0,0,0,0,0,0],
    [0,0,1,0,0,0],
    [0,1,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
j = [
    [0,0,0,0,0,0],
    [0,0,0,1,0,0],
    [0,0,0,0,0,0],
    [0,0,1,1,0,0],
    [0,0,0,1,0,0],
    [0,0,0,1,0,0],
    [1,0,0,1,0,0],
    [0,1,1,0,0,0],
    [0,0,0,0,0,0]
]
k = [
    [0,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,1,0,0],
    [1,0,1,0,0,0],
    [1,1,0,0,0,0],
    [1,0,1,0,0,0],
    [1,0,0,1,0,0],
    [0,0,0,0,0,0]
]
l = [
    [0,0,0,0,0,0],
    [0,1,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
m = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,1,0,1,0,0],
    [1,0,1,0,1,0],
    [1,0,1,0,1,0],
    [1,0,1,0,1,0],
    [1,0,1,0,1,0],
    [0,0,0,0,0,0]
]
n = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0]
]
o = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
p = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,1,1,1,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [0,0,0,0,0,0]
]
q = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,1,1,1,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,1,0],
    [0,0,0,0,1,0],
    [0,0,0,0,1,0],
    [0,0,0,0,0,0]
]
r = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,0,1,1,0,0],
    [1,1,0,1,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [0,0,0,0,0,0]
]
s = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,1,1,1,1,0],
    [1,0,0,0,0,0],
    [0,1,1,1,0,0],
    [0,0,0,0,1,0],
    [1,1,1,1,0,0],
    [0,0,0,0,0,0]
]
t = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,1,0,0,0,0],
    [1,1,1,0,0,0],
    [0,1,0,0,0,0],
    [0,1,0,0,0,0],
    [0,1,0,0,1,0],
    [0,0,1,1,0,0],
    [0,0,0,0,0,0]
]
u = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,1,1,0],
    [0,1,1,0,1,0],
    [0,0,0,0,0,0]
]
v = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,0,1,0,0],
    [0,0,1,0,0,0],
    [0,0,0,0,0,0]
]
w = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [1,0,1,0,1,0],
    [1,0,1,0,1,0],
    [0,1,0,1,0,0],
    [0,0,0,0,0,0]
]
x = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [0,1,0,1,0,0],
    [0,0,1,0,0,0],
    [0,1,0,1,0,0],
    [1,0,0,0,1,0],
    [0,0,0,0,0,0]
]
y = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,1,0],
    [0,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
z = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [1,1,1,1,1,0],
    [0,0,0,1,0,0],
    [0,0,1,0,0,0],
    [0,1,0,0,0,0],
    [1,1,1,1,1,0],
    [0,0,0,0,0,0]
]

question = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [0,0,0,0,1,0],
    [0,0,0,1,0,0],
    [0,0,1,0,0,0],
    [0,0,0,0,0,0],
    [0,0,1,0,0,0],
    [0,0,0,0,0,0]
]
space = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0],
    [0,0,0,0,0,0]
]

stop = [
    [0,0,0,0],
    [0,0,0,0],
    [0,0,0,0],
    [0,0,0,0],
    [0,0,0,0],
    [0,0,0,0],
    [0,0,0,0],
    [0,1,0,0],
    [0,0,0,0]
]

comma = [
    [0,0,0,0,0],
    [0,1,1,0,0],
    [0,0,1,0,0],
    [0,1,0,0,0],
    [0,0,0,0,0],
    [0,0,0,0,0],
    [0,0,0,0,0],
    [0,0,0,0,0],
    [0,0,0,0,0]
]

exclaim = [
    [0,0,0,0],
    [0,1,0,0],
    [0,1,0,0],
    [0,1,0,0],
    [0,1,0,0],
    [0,1,0,0],
    [0,0,0,0],
    [0,1,0,0],
    [0,0,0,0]
]

at = [
    [0,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,0],
    [1,0,0,0,0,0,1,0],
    [1,0,1,1,1,0,1,0],
    [1,0,1,0,1,0,1,0],
    [1,0,1,1,1,1,1,0],
    [1,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,0],
    [0,0,0,0,0,0,0,0]
]
colon = [
    [0,0,0,0,0],
    [0,0,0,0,0],
    [0,0,0,0,0],
    [0,0,1,0,0],
    [0,0,0,0,0],
    [0,0,0,0,0],
    [0,0,1,0,0],
    [0,0,0,0,0],
    [0,0,0,0,0]
]
semicolon = [
    [0,0,0,0,0],
    [0,0,0,0,0],
    [0,0,0,0,0],
    [0,0,1,0,0],
    [0,0,0,0,0],
    [0,0,0,0,0],
    [0,0,1,0,0],
    [0,1,0,0,0],
    [0,0,0,0,0]
]

one = [
    [0,0,0,0,0,0],
    [0,0,1,0,0,0],
    [0,1,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
two = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [0,0,0,0,1,0],
    [0,0,0,1,0,0],
    [0,0,1,0,0,0],
    [0,1,0,0,0,0],
    [1,1,1,1,1,0],
    [0,0,0,0,0,0]
]
three = [
    [0,0,0,0,0,0],
    [0,3,3,3,0,0],
    [3,0,0,0,3,0],
    [0,0,0,0,3,0],
    [0,3,3,3,0,0],
    [0,0,0,0,3,0],
    [3,0,0,0,3,0],
    [0,3,3,3,0,0],
    [0,0,0,0,0,0]
]
four = [
    [0,0,0,0,0,0],
    [0,0,0,1,0,0],
    [0,0,1,1,0,0],
    [0,1,0,1,0,0],
    [1,0,0,1,0,0],
    [1,1,1,1,1,0],
    [0,0,0,1,0,0],
    [0,0,0,1,0,0],
    [0,0,0,0,0,0]
]
five = [
    [0,0,0,0,0,0],
    [1,1,1,1,1,0],
    [1,0,0,0,0,0],
    [1,0,0,0,0,0],
    [1,1,1,1,0,0],
    [0,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
six = [
    [0,0,0,0,0,0],
    [0,0,1,1,0,0],
    [0,1,0,0,0,0],
    [1,0,0,0,0,0],
    [1,0,1,1,0,0],
    [1,1,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
seven = [
    [0,0,0,0,0,0],
    [1,1,1,1,1,0],
    [0,0,0,0,1,0],
    [0,0,0,0,1,0],
    [0,0,0,1,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,1,0,0,0],
    [0,0,0,0,0,0]
]
eight = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
nine = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,1,0],
    [0,0,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]
zero = [
    [0,0,0,0,0,0],
    [0,1,1,1,0,0],
    [1,0,0,0,1,0],
    [1,0,0,1,1,0],
    [1,0,1,0,1,0],
    [1,1,0,0,1,0],
    [1,0,0,0,1,0],
    [0,1,1,1,0,0],
    [0,0,0,0,0,0]
]

upperCase = ["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
lowerCase = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
displayUppercase = [A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z]
displayLowercase = [a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z]

numbers = ["1", "2", "3", "4", "5", "6","7", "8", "9", "0"]
displayNumbers = [one, two, three, four, five, six, seven, eight, nine, zero]

specialChars = [" ", "?", "!", "'", "@", ".", ":", ";"]
displaySpecChars = [space, question, exclaim, comma, at, stop, colon, semicolon]

word_st = "HELLO WORLD oh no"
word  = H,E,L,L,O,W,O,R,L,D


def mod_string(text):
    # text = "19:23:59:59"
    # print(text)

    if text[-1] == "9":

        if text[-2] == "5":
            
            if text[-4] == "9":

                if text[-5] == "5":

                    if text [-7] == "3" or text[-7] == "9":

                        if text[-8] == "2":

                            if text[-10] == "9":
                                # print("x9:23:59:59")
                                out = text[-11] + "9:23:59:59"
                            else:    
                                # print("X:23:59:59")
                                out = text[-10] + ":23:59:59"
                        else:
                            # print("X3:59:59")
                            out = text[-8] + text[-7] + ":59:59"
                    else:
                        # print("X:59:59")
                        out = text[-7] + ":59:59"
                else:
                    # print("X9:59")
                    out = text[-5] + "9:59"
            else:
                # print("X:59")
                out = text[-4] + ":59"
        else:
            # print("X9")
            out = text[-2] + "9"
    else:
        # print("X")
        out = text[-1]

    # print(out)
    return out

def firstArray(out, padLeft, padTop):
    stPos = startP(out)
    farray = changepos(padLeft, padTop,stPos)
    return farray

def startP(charAmount):

    num = len(charAmount)

    left = 11 - num
    threes = int(left/3)
    mods =  left%3

    startpos = (threes *10) + (threes * 24) + (mods * 12)

    return startpos
        

def changepos(modx, mody, x):
    posArray = [
        ['\x1b[' + str(mody+0) + ';' + str(modx + x) + 'H'],
        ['\x1b[' + str(mody+1) + ';' + str(modx + x) + 'H'],
        ['\x1b[' + str(mody+2) + ';' + str(modx + x) + 'H'],
        ['\x1b[' + str(mody+3) + ';' + str(modx + x) + 'H'],
        ['\x1b[' + str(mody+4) + ';' + str(modx + x) + 'H'],
        ['\x1b[' + str(mody+5) + ';' + str(modx + x) + 'H'],
        ['\x1b[' + str(mody+6) + ';' + str(modx + x) + 'H'],
        ['\x1b[' + str(mody+7) + ';' + str(modx + x) + 'H'],
        ['\x1b[' + str(mody+8) + ';' + str(modx + x) + 'H'],
    ]
    return posArray


def translate_string(words, first, padLeft, padTop): # FD uses
    # words to be
    displayArray = []

    if first:
        displayArray.append(firstArray(words, padLeft, padTop))

    for letter in words:  
        
        if letter in upperCase:
            index = upperCase.index(letter)
            displayArray.append(displayUppercase[index])
            
        elif letter in lowerCase:
            index = lowerCase.index(letter)
            displayArray.append(displayLowercase[index])
            
        elif letter in specialChars:
            index = specialChars.index(letter)
            displayArray.append(displaySpecChars[index])
        
        elif letter in numbers:
            index = numbers.index(letter)
            displayArray.append(displayNumbers[index])

    return displayArray


def int_str(int): #, type):
    if int == 0:
        return "  "
    else:
        #return "0 "
        return u"\u2588\u2588" 
    


def print_display(display,padLeft,padTop):  # FD uses
    line1 = []
    line2 = []
    line3 = []
    line4 = []
    line5 = []
    line6 = []
    line7 = []
    line8 = []
    line9 = []
    lines = []
    displayFormatted = ""
    

    for item in display:
        line1.append(item[0])
        line2.append(item[1])
        line3.append(item[2])
        line4.append(item[3])
        line5.append(item[4])
        line6.append(item[5])
        line7.append(item[6])
        line8.append(item[7])
        line9.append(item[8])
    
    lines.append(line1)
    lines.append(line2)
    lines.append(line3)
    lines.append(line4)
    lines.append(line5)
    lines.append(line6)
    lines.append(line7)
    lines.append(line8)
    lines.append(line9)

    for line in lines:
        for i in line:
            for a in i:
                bol = isinstance(a, int)
                if bol:
                    displayFormatted = displayFormatted + int_str(a)
                else:
                    displayFormatted = displayFormatted + a
        displayFormatted = displayFormatted + "\n" 
    
    print(displayFormatted)

def display(text, padLeft, padTop):
    text = mod_string(text)
    displayList = translate_string(text, True, padLeft, padTop)            
    print_display(displayList, padLeft, padTop) #second arg for pos Padleft

def firstdisplay(text, padLeft, padTop):
    displayList = translate_string(text, True, padLeft, padTop)            
    print_display(displayList, padLeft, padTop)
   

def main():
    entered = input( "Enter some words: ")

    # font = input("Select either Boxed or Nots")

    display(entered)

def loop(): # Tester function
    i = 10
    firstdisplay("10:10:10:11", 10, 10)
    while i !=0:
        text = "10:10:10:{}".format('0' if i <10 else "")+str(i)
        display(text, 10, 10)
        sleep(1)
        i -=1

if __name__ == "__main__":
    loop()